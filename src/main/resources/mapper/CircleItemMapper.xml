<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zyx.mapper.CircleItemMapper">
    <resultMap id="circleItemMap" type="com.zyx.model.CircleItem">
        <!--
          WARNING - @mbggenerated
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="circle_id" property="circleId" jdbcType="INTEGER"/>
        <result column="create_id" property="createId" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="hot" property="hot" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="top" property="top" jdbcType="INTEGER"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <resultMap id="circleItemVoMap" type="com.zyx.model.vo.CircleItemVo" extends="circleItemMap">
        <result column="createUser" property="createUser" jdbcType="VARCHAR"/>
        <result column="circleTitle" property="circleTitle" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="findByPager" resultMap="circleItemVoMap">
    SELECT
    circle_item.id,
    circle_item.circle_id,
    circle_item.create_id,
    circle_item.title,
    circle_item.content,
    circle_item.hot,
    circle_item.create_time,
    circle_item.top,
    circle_item.state,
    `user`.`name` AS createUser,
    circle.title AS circleTitle
    FROM
    circle_item
    INNER JOIN `user` ON circle_item.create_id = `user`.id
    INNER JOIN circle ON circle_item.circle_id = circle.id WHERE circle_item.state != -1 ORDER BY create_time DESC  LIMIT #{start},#{end}
  </select>
    <select id="findOne" resultMap="circleItemMap">
    SELECT * FROM circle_item WHERE id=#{id} AND state != -1
  </select>
    <update id="setVisible">
        UPDATE circle_item SET state=#{state} WHERE id=#{id}
    </update>
    <select id="search" resultMap="circleItemVoMap">
        SELECT
        circle_item.id,
        circle_item.circle_id,
        circle_item.create_id,
        circle_item.title,
        circle_item.content,
        circle_item.hot,
        circle_item.create_time,
        circle_item.top,
        circle_item.state,
        `user`.`name` AS createUser,
        circle.title AS circleTitle
        FROM
        circle_item
        INNER JOIN `user` ON circle_item.create_id = `user`.id
        INNER JOIN circle ON circle_item.circle_id = circle.id WHERE (circle_item.title LIKE CONCAT('%','${searchText}','%') OR `user`.`name` LIKE CONCAT('%','${searchText}','%')) AND circle_item.state != -1 ORDER BY create_time DESC  LIMIT #{start},#{end}
    </select>

    <select id="searchCount" resultType="java.lang.Integer">
        SELECT COUNT(*) as counts FROM circle_item
    </select>

</mapper>